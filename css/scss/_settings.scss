// Media Queries
@charset "utf-8";

$bp_tab: 1199px; //tab
$bp_sp: 767px; //sp
$columnWidth: 1280;
// Font Set
$baseSize: 16;
// Color Set
$baseColor: #333;
$pointColor: #145ebe;

@mixin mq($device, $val: null, $val2: null) {
	@if $device == pc {
		//pc
		@media only screen and (min-width: $bp_tab + 1) {
			@content;
		}
		@media print {
			@content;
		}
	} @else if $device == pc_s {
		//pc_s
		@media only screen and (min-width: $bp_tab + 1) and (max-width: ($bp_tab + 1) + (1920 - ($bp_tab + 1)) / 2) {
			@content;
		}
	} @else if $device == pc_l {
		//pc_l
		@media only screen and (min-width: ($bp_tab + 1) + (1920 - ($bp_tab + 1)) / 2 + 1) {
			@content;
		}
		@media print {
			@content;
		}
	} @else if $device == tab {
		//tab
		@media only screen and (min-width: $bp_sp + 1) and (max-width: $bp_tab) {
			@content;
		}
	} @else if $device == tab_l {
		//tab_l
		@media only screen and (min-width: ($bp_tab - $bp_sp) / 2 + $bp_sp + 1) and (max-width: $bp_tab) {
			@content;
		}
	} @else if $device == tab_s {
		//tab_s
		@media only screen and (min-width: $bp_sp + 1) and (max-width: ($bp_tab - $bp_sp) / 2 + $bp_sp) {
			@content;
		}
	} @else if $device == sp {
		//sp
		@media only screen and (max-width: $bp_sp) {
			@content;
		}
	} @else if $device == sp_l {
		//sp_l
		@media only screen and (min-width: ($bp_sp - 320) / 2 + 320 + 1) and (max-width: $bp_sp) {
			@content;
		}
	} @else if $device == sp_s {
		//sp_s
		@media only screen and (max-width: ($bp_sp - 320) / 2 + 320) {
			@content;
		}
	} @else if $device == pc_tab {
		//pc & tab
		@media only screen and (min-width: $bp_sp + 1) {
			@content;
		}
	} @else if $device == tab_sp {
		//tab & sp
		@media only screen and (max-width: $bp_tab) {
			@content;
		}
	} @else if $device == min_w {
		//max-width
		@media only screen and (min-width: $val) {
			@content;
		}
	} @else if $device == max_w {
		//min-width
		@media only screen and (max-width: $val) {
			@content;
		}
	} @else if $device == min_max_w {
		//min-width ~ max-width
		@media only screen and (min-width: $val) and (max-width: $val2) {
			@content;
		}
	} @else if $device == min_h {
		//max-height
		@media only screen and (min-height: $val) {
			@content;
		}
	} @else if $device == max_h {
		//min-height
		@media only screen and (max-height: $val) {
			@content;
		}
	} @else if $device == min_max_h {
		//min-height ~ max-height
		@media only screen and (min-height: $val) and (max-height: $val2) {
			@content;
		}
	}
}


@function wCon($width, $parentWidth: $columnWidth) {
	@return $width / $parentWidth * 100%;
}


// Base Width Set
%bw {
	width: 90%;
	max-width: $columnWidth + px;
	margin: auto;
	@include mq(tab_sp) {
		width: 880 / 960 * 100%;
	}
}
%bw_l {
	width: 90%;
	margin: auto;
	@include mq(pc) {
		padding: 0 100px;
	}
	@include mq(tab_sp) {
		width: 880 / 960 * 100%;
	}
}

// ClearFix
%cf {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}


@mixin fsz($size: $baseSize, $parent: null) {
	$i: $size * (100 / $baseSize);

	@if $parent == null {
		font-size: ceil($i * 1%);
	} @else {
		font-size: ceil(100% * ($size / $parent));
	}
}
@mixin fsz-cha($pc_fsz: 30, $tab_fsz: 30, $sp_fsz: 17) {
	@include fsz($pc_fsz);
	@include mq(tab) {
		@include fsz($tab_fsz);
	}
	@include mq(sp) {
		@include fsz($sp_fsz);
	}
}

@mixin font($type: "kr") {
	@if $type == "kr" {
		font-family: 'Noto Sans KR', sans-serif;
	} @else if $type == "en" {
		font-family: 'Open Sans', sans-serif;
	}
}




@mixin cV($pro, $v1: 0, $v2: 0, $v3: null) {
	#{$pro}: $v1;
	@if $v3 == null {
		@include mq(sp) {
			#{$pro}: $v2;
		}
	} @else {
		@include mq(tab) {
			#{$pro}: $v2;
		}
		@include mq(sp) {
			#{$pro}: $v3;
		}
	}
}



